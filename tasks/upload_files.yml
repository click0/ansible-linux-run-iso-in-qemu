---

# Upload (from Ansible host)
# In order not to cache in /root/.ansible/tmp... if there is not enough free disk space.

- name: Upload file 'lisoq_iso_file_local'
  ansible.posix.synchronize:
    src: '{{ lisoq_iso_file_local }}'
    dest: '{{ lisoq_ramdisk_path }}'
    # (default) overwrite on source change
    copy_links: true # Copy symlinks as the item
  ignore_errors: true
  when: (lisoq_iso_file_local)

- name: Upload file 'lisoq_qemu_static_custom_local'.
  ansible.posix.synchronize:
    src: '{{ lisoq_qemu_static_custom_local }}'
    dest: '{{ lisoq_ramdisk_path }}'
    copy_links: true
  ignore_errors: true
  when: (lisoq_qemu_static_custom_enable) and (lisoq_qemu_static_custom_local)

# Download files (from Internet)

- name: Download file 'lisoq_iso_file_url'
  ansible.builtin.get_url:
    url: '{{ lisoq_iso_file_url }}'
    dest: '{{ lisoq_ramdisk_path }}'
    mode: '0644'
    # (default) overwrite on source change
  when: (lisoq_iso_file_url)

# Extract archive

- name: Unarchive file 'lisoq_qemu_static_custom_local'.
  ansible.builtin.unarchive:
    src: '{{ lisoq_ramdisk_location }}/{{ lisoq_qemu_static_custom_local | basename }}'
    dest: '{{ lisoq_ramdisk_location }}'
    remote_src: true
  when: (lisoq_qemu_static_custom_enable) and (lisoq_qemu_static_custom_local)

- name: Download and unarchive file 'lisoq_qemu_static_custom_uefi_url'.
  ansible.builtin.unarchive:
    src: '{{ lisoq_qemu_static_custom_uefi_url }}'
    dest: '{{ lisoq_ramdisk_location }}'
    remote_src: true
  when: (lisoq_qemu_static_custom_enable) and (lisoq_qemu_disk_large_detect) and (lisoq_qemu_static_custom_uefi_url|lenght > 0)

- name: Download and unarchive file 'lisoq_qemu_static_custom_url'.
  ansible.builtin.unarchive:
    src: '{{ lisoq_qemu_static_custom_url }}'
    dest: '{{ lisoq_ramdisk_location }}'
    remote_src: true
  when: (lisoq_qemu_static_custom_enable) and (lisoq_qemu_static_custom_url)
